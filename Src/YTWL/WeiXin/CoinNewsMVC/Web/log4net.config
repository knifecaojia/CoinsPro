<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <log4net>
    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
    </root>
    <logger name="RollingFile">
      <appender-ref ref="InfoLog" />
      <appender-ref ref="WarnLog" />
      <appender-ref ref="TraceLog" />
    </logger>
    <logger name="Email">
      <appender-ref ref="ErrorLog" />
      <appender-ref ref="FatalLog" />
    </logger>
    <logger name="NHibernate.SQL" additivity="false">
      <level value="Off" />
      <appender-ref ref="NHibernate.SQLLog" />
    </logger>

    <logger name="NHibernate.Caches.SysCache.SysCache" additivity="false">
      <level value="Off" />
      <appender-ref ref="NHibernate.SysCache" />
    </logger>

    <logger name="Memcached.ClientLibrary.MemcachedClient">
      <level value="Off"/>
      <appender-ref ref="MemcachedRollingFileAppender"/>
    </logger>
    <logger name="Memcached.ClientLibrary.SockIOPool">
      <level value="Off"/>
      <appender-ref ref="MemcachedRollingFileAppender"/>
    </logger>

    <!--定义输出到文件中-->
    <appender name="ErrorLog" type="log4net.Appender.RollingFileAppender">
      <!--日志文件名,其中 [%前缀] 部分表示前缀-->
      <file type="log4net.Util.PatternString" value="E:\Log\nh\error\error%_" />
      <!--<file value="logfile"/>-->
      <!--是否在文件中追加 -->
      <appendToFile value="true"/>
      <!--按日期和大小写日志文件，超过大小则备份,超过日期重写-->
      <rollingStyle value="Composite"/>
      <!--最大变换数量 -->
      <maxSizeRollBackups value="100"/>
      <!--最大文件大小 -->
      <maximumFileSize value="10MB"/>
      <datePattern value="yyyyMMdd&quot;.txt&quot;" />
      <!--日志文件名是否为静态-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="ERROR" />
        <param name="LevelMax" value="ERROR" />
      </filter>
    </appender>
    <appender name="FatalLog" type="log4net.Appender.RollingFileAppender">
      <!--日志文件名,其中 [%前缀] 部分表示前缀-->
      <file type="log4net.Util.PatternString" value="E:\Log\nh\fatal\fatal%_" />
      <!--<file value="logfile"/>-->
      <!--是否在文件中追加 -->
      <appendToFile value="true"/>
      <!--按日期和大小写日志文件，超过大小则备份,超过日期重写-->
      <rollingStyle value="Composite"/>
      <!--最大变换数量 -->
      <maxSizeRollBackups value="100"/>
      <!--最大文件大小 -->
      <maximumFileSize value="10MB"/>
      <datePattern value="yyyyMMdd&quot;.txt&quot;" />
      <!--日志文件名是否为静态-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="FATAL" />
        <param name="LevelMax" value="FATAL" />
      </filter>
    </appender>
    <appender name="InfoLog" type="log4net.Appender.RollingFileAppender">
      <!--日志文件名,其中 [%前缀] 部分表示前缀-->
      <file type="log4net.Util.PatternString" value="E:\Log\nh\info\info%_" />
      <!--<file value="logfile"/>-->
      <!--是否在文件中追加 -->
      <appendToFile value="true"/>
      <!--按日期和大小写日志文件，超过大小则备份,超过日期重写-->
      <rollingStyle value="Composite"/>
      <!--最大变换数量 -->
      <maxSizeRollBackups value="100"/>
      <!--最大文件大小 -->
      <maximumFileSize value="10MB"/>
      <datePattern value="yyyyMMdd&quot;.txt&quot;" />
      <!--日志文件名是否为静态-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="INFO" />
        <param name="LevelMax" value="INFO" />
      </filter>
    </appender>
    <appender name="WarnLog" type="log4net.Appender.RollingFileAppender">
      <!--日志文件名,其中 [%前缀] 部分表示前缀-->
      <file type="log4net.Util.PatternString" value="E:\Log\nh\warn\warn%_" />
      <!--<file value="logfile"/>-->
      <!--是否在文件中追加 -->
      <appendToFile value="true"/>
      <!--按日期和大小写日志文件，超过大小则备份,超过日期重写-->
      <rollingStyle value="Composite"/>
      <!--最大变换数量 -->
      <maxSizeRollBackups value="100"/>
      <!--最大文件大小 -->
      <maximumFileSize value="10MB"/>
      <datePattern value="yyyyMMdd&quot;.txt&quot;" />
      <!--日志文件名是否为静态-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="WARN" />
        <param name="LevelMax" value="WARN" />
      </filter>
    </appender>
    <appender name="TraceLog" type="log4net.Appender.RollingFileAppender">
      <!--日志文件名,其中 [%前缀] 部分表示前缀-->
      <file type="log4net.Util.PatternString" value="E:\Log\nh\trace\trace%_" />
      <!--<file value="logfile"/>-->
      <!--是否在文件中追加 -->
      <appendToFile value="true"/>
      <!--按日期和大小写日志文件，超过大小则备份,超过日期重写-->
      <rollingStyle value="Composite"/>
      <!--最大变换数量 -->
      <maxSizeRollBackups value="100"/>
      <!--最大文件大小 -->
      <maximumFileSize value="10MB"/>
      <datePattern value="yyyyMMdd&quot;.txt&quot;" />
      <!--日志文件名是否为静态-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="DEBUG" />
      </filter>
    </appender>
    <!--Memcached定义输出到文件中-->
    <appender name="MemcachedRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="E:\Log\nh\memcachedclient\"/>
      <appendToFile value="true"/>
      <MaxSizeRollBackups value="10"/>
      <StaticLogFileName value="false"/>
      <RollingStyle value="Date"/>
      <datePattern value="yyyy-MM-dd&quot;.txt&quot;"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%newlineTimeStamp:%date%newlineThreadID:[%thread] Level:%-5level%newlineMethod：%logger property:[[%ndc]]%newlineMessage:%message%newline"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Info"/>
        <param name="LevelMax" value="Fatal"/>
      </filter>
    </appender>

    <!--定义输出到控制台命令行中-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--定义输出到windows事件中-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--定义输出到数据库中，这里举例输出到Access数据库中，数据库为D盘的 access.mdb-->
    <appender name="AdoNetAppender_Access" type="log4net.Appender.AdoNetAppender">
      <connectionString value="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Log\touhm\access.mdb" />
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message]) VALUES (@log_date, @thread, @log_level, @logger, @message)" />
      <!--定义各个参数-->
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="1024" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
    </appender>
  </log4net>
</configuration>